{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport aemHeadlessClient from \"./aemHeadlessClient\";\nexport async function fetchPersistedQuery(persistedQueryName, queryParameters) {\n  let data;\n  let err;\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n    const response = await aemHeadlessClient.runPersistedQuery(persistedQueryName, queryParameters);\n    // The GraphQL data is stored on the response's data field\n    data = response === null || response === void 0 ? void 0 : response.data;\n  } catch (e) {\n    var _e$toJSON, _e$toJSON$map;\n    // An error occurred, return the error messages\n    err = (_e$toJSON = e.toJSON()) === null || _e$toJSON === void 0 ? void 0 : (_e$toJSON$map = _e$toJSON.map(error => error.message)) === null || _e$toJSON$map === void 0 ? void 0 : _e$toJSON$map.join(\", \");\n    console.error(e.toJSON());\n  }\n  return {\n    data,\n    err\n  };\n}\nexport default fetchPQ;","map":{"version":3,"names":["useEffect","useState","aemHeadlessClient","fetchPersistedQuery","persistedQueryName","queryParameters","data","err","response","runPersistedQuery","e","_e$toJSON","_e$toJSON$map","toJSON","map","error","message","join","console","fetchPQ"],"sources":["/Users/sandeep/Code/AEM React Headless/aem-guides-wknd-graphql-main/react-app/src/api/fetchPQ.js"],"sourcesContent":["\nimport { useEffect, useState } from \"react\";\nimport aemHeadlessClient from \"./aemHeadlessClient\";\nexport async function fetchPersistedQuery(persistedQueryName, queryParameters) {\n  let data;\n  let err;\n\n  try {\n    // AEM GraphQL queries are asynchronous, either await their return or use Promise-based .then(..) { ... } syntax\n    const response = await aemHeadlessClient.runPersistedQuery(\n      persistedQueryName,\n      queryParameters\n    );\n    // The GraphQL data is stored on the response's data field\n    data = response?.data;\n  } catch (e) {\n    // An error occurred, return the error messages\n    err = e\n      .toJSON()\n      ?.map((error) => error.message)\n      ?.join(\", \");\n    console.error(e.toJSON());\n  }\n\n  return { data, err };\n}\nexport default fetchPQ;"],"mappings":"AACA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,iBAAiB,MAAM,qBAAqB;AACnD,OAAO,eAAeC,mBAAmBA,CAACC,kBAAkB,EAAEC,eAAe,EAAE;EAC7E,IAAIC,IAAI;EACR,IAAIC,GAAG;EAEP,IAAI;IACF;IACA,MAAMC,QAAQ,GAAG,MAAMN,iBAAiB,CAACO,iBAAiB,CACxDL,kBAAkB,EAClBC,eAAe,CAChB;IACD;IACAC,IAAI,GAAGE,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEF,IAAI;EACvB,CAAC,CAAC,OAAOI,CAAC,EAAE;IAAA,IAAAC,SAAA,EAAAC,aAAA;IACV;IACAL,GAAG,IAAAI,SAAA,GAAGD,CAAC,CACJG,MAAM,EAAE,cAAAF,SAAA,wBAAAC,aAAA,GADLD,SAAA,CAEFG,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,OAAO,CAAC,cAAAJ,aAAA,uBAF3BA,aAAA,CAGFK,IAAI,CAAC,IAAI,CAAC;IACdC,OAAO,CAACH,KAAK,CAACL,CAAC,CAACG,MAAM,EAAE,CAAC;EAC3B;EAEA,OAAO;IAAEP,IAAI;IAAEC;EAAI,CAAC;AACtB;AACA,eAAeY,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}
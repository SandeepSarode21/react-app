{"ast":null,"code":"var _jsxFileName = \"/Users/sandeep/Code/AEM React Headless/aem-guides-wknd-graphql-main/react-app/src/components/Text.js\",\n  _s = $RefreshSig$();\nimport image from \"../images/wknd-logo-dk.svg\";\nimport React, { useState } from \"react\";\nimport aemHeadlessClient from \"../api/aemHeadlessClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Text(props) {\n  _s();\n  const [hero, setText] = useState(() => {\n    async function fetchData() {\n      const persistentQuery = \"tenant-a-com/TextByPath\";\n      const response = await aemHeadlessClient.runPersistedQuery(\"tenant-a-com/TextByPath;fragmentPath=\" + props.heroPath);\n\n      // The GraphQL data is stored on the response's data field\n      setText(response === null || response === void 0 ? void 0 : response.data);\n    }\n    fetchData();\n  });\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this), \"I'M Text component\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 13\n  }, this);\n}\n_s(Text, \"pA98ynWwHkh2LseiUMy+DSQXvfE=\");\n_c = Text;\nvar _c;\n$RefreshReg$(_c, \"Text\");","map":{"version":3,"names":["image","React","useState","aemHeadlessClient","jsxDEV","_jsxDEV","Text","props","_s","hero","setText","fetchData","persistentQuery","response","runPersistedQuery","heroPath","data","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sandeep/Code/AEM React Headless/aem-guides-wknd-graphql-main/react-app/src/components/Text.js"],"sourcesContent":["import image from \"../images/wknd-logo-dk.svg\"\nimport React, { useState } from \"react\";\nimport aemHeadlessClient from \"../api/aemHeadlessClient\";\n\nexport default function Text(props){\n    const [hero, setText] = useState(()=>{\n\n        \n        async function fetchData() {\n          const persistentQuery = \"tenant-a-com/TextByPath\";\n          const response = await aemHeadlessClient.runPersistedQuery(\"tenant-a-com/TextByPath;fragmentPath=\"+props.heroPath);\n        \n          // The GraphQL data is stored on the response's data field\n           setText(response?.data);\n          \n          \n          }\n          fetchData();\n        }\n      );\n\n    return (<h1><hr />I'M Text component</h1>)\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,4BAA4B;AAC9C,OAAOC,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,eAAe,SAASC,IAAIA,CAACC,KAAK,EAAC;EAAAC,EAAA;EAC/B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,MAAI;IAGjC,eAAeS,SAASA,CAAA,EAAG;MACzB,MAAMC,eAAe,GAAG,yBAAyB;MACjD,MAAMC,QAAQ,GAAG,MAAMV,iBAAiB,CAACW,iBAAiB,CAAC,uCAAuC,GAACP,KAAK,CAACQ,QAAQ,CAAC;;MAElH;MACCL,OAAO,CAACG,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEG,IAAI,CAAC;IAGxB;IACAL,SAAS,EAAE;EACb,CAAC,CACF;EAEH,oBAAQN,OAAA;IAAAY,QAAA,gBAAIZ,OAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,sBAAkB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;AAC7C;AAACb,EAAA,CAlBuBF,IAAI;AAAAgB,EAAA,GAAJhB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}